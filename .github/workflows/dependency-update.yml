name: Dependency Update Butler

on:
  schedule:
    - cron: "*/5 * * * *" # every 5 minutes
  workflow_dispatch:

jobs:
  update-dependencies:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dependency: [jackson-databind, junit, maven-compiler-plugin]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Update dependency ${{ matrix.dependency }}
        run: |
          mvn versions:use-latest-versions \
           -Dincludes=${{ matrix.dependency }} \
           -DallowSnapshots=true \
           -DallowMajorUpdates=true \
           -DallowIncrementalUpdates=true \
           -DgenerateBackupPoms=false

      - name: Commit changes for ${{ matrix.dependency }}
        id: commit
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if git diff-index --quiet HEAD --; then
            echo "No changes to commit"
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            git commit -m "chore: update ${{ matrix.dependency }}"
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Create or update Pull Request for ${{ matrix.dependency }}
        if: steps.commit.outputs.changes == 'true'
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GH_PAT }}
          commit-message: "chore: update ${{ matrix.dependency }}"
          branch: dependency-update-${{ matrix.dependency }}
          title: "Dependency Update: ${{ matrix.dependency }}"
          body: "This PR updates ${{ matrix.dependency }} to the latest version (including pre-releases)."
          create-if-no-existing: true

      - name: Checkout PR branch
        if: steps.cpr.outputs.pull-request-number != ''
        run: |
          PR_BRANCH=$(gh pr view ${{ steps.cpr.outputs.pull-request-number }} --json headRefName -q .headRefName)
          git fetch origin $PR_BRANCH:$PR_BRANCH
          git checkout $PR_BRANCH

      - name: Build and Test PR branch
        if: steps.cpr.outputs.pull-request-number != ''
        run: mvn clean verify

      # - name: Enable auto-merge for PR
      #   if: steps.cpr.outputs.pull-request-number != ''
      #   run: gh pr merge ${{ steps.cpr.outputs.pull-request-number }} --merge --auto
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GH_PAT }}
