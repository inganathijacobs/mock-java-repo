name: Dependency Update Butler

on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch:

jobs:
  update-dependencies:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dependency: [jackson-databind, junit, maven-compiler-plugin]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Get old version for ${{ matrix.dependency }}
        id: oldver
        run: |
          OLD_VERSION=$(grep -A 1 "<artifactId>${{ matrix.dependency }}</artifactId>" pom.xml | grep "<version>" | sed -E 's/.*<version>(.*)<\/version>.*/\1/')
          echo "old_version=$OLD_VERSION" >> $GITHUB_OUTPUT

      - name: Update dependency ${{ matrix.dependency }}
        run: |
          if [ "${{ matrix.dependency }}" = "maven-compiler-plugin" ]; then
            mvn versions:use-latest-versions -Dincludes=maven-compiler-plugin -Dtype=plugin -DgenerateBackupPoms=false
          else
            mvn versions:use-latest-versions -Dincludes=${{ matrix.dependency }} -DgenerateBackupPoms=false
          fi

      - name: Get new version for ${{ matrix.dependency }}
        id: newver
        run: |
          NEW_VERSION=$(grep -A 1 "<artifactId>${{ matrix.dependency }}</artifactId>" pom.xml | grep "<version>" | sed -E 's/.*<version>(.*)<\/version>.*/\1/')
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit changes for ${{ matrix.dependency }}
        id: commit
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if git diff-index --quiet HEAD --; then
            echo "No changes to commit"
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            git commit -m "chore: bump ${{ matrix.dependency }} from ${{ steps.oldver.outputs.old_version }} to ${{ steps.newver.outputs.new_version }}"
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Create or update Pull Request for ${{ matrix.dependency }}
        if: steps.commit.outputs.changes == 'true'
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GH_PAT }}
          commit-message: "chore: bump ${{ matrix.dependency }} from ${{ steps.oldver.outputs.old_version }} to ${{ steps.newver.outputs.new_version }}"
          branch: dependency-update-${{ matrix.dependency }}
          title: "Bump ${{ matrix.dependency }} from ${{ steps.oldver.outputs.old_version }} to ${{ steps.newver.outputs.new_version }}"
          body: "This PR updates `${{ matrix.dependency }}` from `${{ steps.oldver.outputs.old_version }}` to `${{ steps.newver.outputs.new_version }}`."
          create-if-no-existing: true

      - name: Checkout PR branch
        if: steps.cpr.outputs.pull-request-number != ''
        run: |
          PR_BRANCH=$(gh pr view ${{ steps.cpr.outputs.pull-request-number }} --json headRefName -q .headRefName)
          git fetch origin $PR_BRANCH:$PR_BRANCH
          git checkout $PR_BRANCH

      - name: Build and Test PR branch
        if: steps.cpr.outputs.pull-request-number != ''
        run: mvn clean verify

      # No auto-merge step; manual review required
