name: Dependency Update Butler with AI Summary

on:
  schedule:
    - cron: "*/5 * * * *" # every 5 minutes
  workflow_dispatch:

jobs:
  update-dependencies:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dependency: [jackson-databind, junit, maven-compiler-plugin] # replace with dynamic list if needed

    steps:
      # 1️⃣ Checkout
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Setup Java
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      # 3️⃣ Update dependency
      - name: Update dependency ${{ matrix.dependency }}
        run: mvn versions:use-latest-releases -Dincludes=${{ matrix.dependency }}

      # 4️⃣ Commit changes if any
      - name: Commit changes for ${{ matrix.dependency }}
        id: commit
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if git diff-index --quiet HEAD --; then
            echo "No changes to commit"
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            git commit -m "chore: update ${{ matrix.dependency }}"
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      # 5️⃣ Create or update PR
      - name: Create or update Pull Request for ${{ matrix.dependency }}
        if: steps.commit.outputs.changes == 'true'
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GH_PAT }}
          commit-message: "chore: update ${{ matrix.dependency }}"
          branch: dependency-update-${{ matrix.dependency }}
          title: "Dependency Update: ${{ matrix.dependency }}"
          body: "This PR updates ${{ matrix.dependency }} to the latest release."
          create-if-no-existing: true

      # 6️⃣ Build & Test on PR branch
      - name: Build & Test
        if: steps.commit.outputs.changes == 'true'
        run: |
          git checkout dependency-update-${{ matrix.dependency }}
          mvn clean install

      # 7️⃣ Post AI summary
      - name: Post AI Dependency Summary
        if: steps.commit.outputs.changes == 'true'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          UPDATED="${{ matrix.dependency }}"
          SUMMARY=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d "{
              \"model\": \"gpt-4o-mini\",
              \"messages\": [{\"role\": \"user\", \"content\": \"Summarize the update of dependency: $UPDATED\"}]
            }" | jq -r '.choices[0].message.content')

          echo "AI Summary for $UPDATED:"
          echo "$SUMMARY"
